openapi: 3.1.0
info:
  title: Tic Tac Toe
  description: |
    This API allows writing down marks on a Tic Tac Toe Board
    and requesting the state of the Board or of individual squares.
  version: 1.0.0
tags:
  - name: Gameplay
paths:
  # Whole Board operations
  /board:
    get:
      summary: Get the whole Board
      description: Retrieves the current state of the Board and the Winner.
      tags:
        - Gameplay
      operationId: get-Board
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"

  # Single square operations
  /board/{row}/{column}:
    parameters:
      - $ref: "#/components/parameters/rowParam"
      - $ref: "#/components/parameters/columnParam"
    get:
      summary: Get a single Board square
      description: Retrieves the requested square.
      tags:
        - Gameplay
      operationId: get-square
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Mark"
        "400":
          description: The provided parameters are incorrect
          content:
            text/html:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              example: "Illegal Coordinates"
    put:
      summary: Set a single Board square
      description: Places a Mark on the Board and retrieves the whole Board and the Winner (if any).
      tags:
        - Gameplay
      operationId: put-square
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Mark"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
        "400":
          description: The provided parameters are incorrect
          content:
            text/html:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              examples:
                illegalCoordinates:
                  value: "Illegal Coordinates."
                notEmpty:
                  value: "Square is not empty."
                invalidMark:
                  value: "Invalid Mark (X or O)."

components:
  parameters:
    rowParam:
      description: Board row (vertical Coordinate)
      name: row
      in: path
      required: true
      schema:
        $ref: "#/components/schemas/Coordinate"
    columnParam:
      description: Board column (horizontal Coordinate)
      name: column
      in: path
      required: true
      schema:
        $ref: "#/components/schemas/Coordinate"
  schemas:
    ErrorMessage:
      type: string
      maxLength: 256
      description: A text message describing an error
    Coordinate:
      type: integer
      minimum: 1
      maximum: 3
      example: 1
    Mark:
      type: string
      enum: [".", "X", "O"]
      description: Possible values for a Board square. `.` means empty square.
      example: "."
    Board:
      type: array
      maxItems: 3
      minItems: 3
      items:
        type: array
        maxItems: 3
        minItems: 3
        items:
          $ref: "#/components/schemas/Mark"
    Winner:
      type: string
      enum: [".", "X", "O"]
      description: Winner of the game. `.` means nobody has won yet.
      example: "."
    Status:
      type: object
      properties:
        Winner:
          $ref: "#/components/schemas/Winner"
        Board:
          $ref: "#/components/schemas/Board"